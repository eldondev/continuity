// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: manifest.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Manifest specifies the entries in a container bundle, keyed and sorted by
// path.
type Manifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      []*Resource            `protobuf:"bytes,1,rep,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	mi := &file_manifest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_manifest_proto_rawDescGZIP(), []int{0}
}

func (x *Manifest) GetResource() []*Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path specifies the path from the bundle root. If more than one
	// path is present, the entry may represent a hardlink, rather than using
	// a link target. The path format is operating system specific.
	Path []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	// Uid specifies the user id for the resource.
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Gid specifies the group id for the resource.
	Gid int64 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	// user and group are not currently used but their field numbers have been
	// reserved for future use. As such, they are marked as deprecated.
	//
	// Deprecated: Marked as deprecated in manifest.proto.
	User string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"` // "deprecated" stands for "reserved" here
	// Deprecated: Marked as deprecated in manifest.proto.
	Group string `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"` // "deprecated" stands for "reserved" here
	// Mode defines the file mode and permissions. We've used the same
	// bit-packing from Go's os package,
	// http://golang.org/pkg/os/#FileMode, since they've done the work of
	// creating a cross-platform layout.
	Mode uint32 `protobuf:"varint,6,opt,name=mode,proto3" json:"mode,omitempty"`
	// Size specifies the size in bytes of the resource. This is only valid
	// for regular files.
	Size uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// Digest specifies the content digest of the target file. Only valid for
	// regular files. The strings are formatted in OCI style, i.e. <alg>:<encoded>.
	// For detailed information about the format, please refer to OCI Image Spec:
	// https://github.com/opencontainers/image-spec/blob/master/descriptor.md#digests-and-verification
	// The digests are sorted in lexical order and implementations may choose
	// which algorithms they prefer.
	Digest []string `protobuf:"bytes,8,rep,name=digest,proto3" json:"digest,omitempty"`
	// Target defines the target of a hard or soft link. Absolute links start
	// with a slash and specify the resource relative to the bundle root.
	// Relative links do not start with a slash and are relative to the
	// resource path.
	Target string `protobuf:"bytes,9,opt,name=target,proto3" json:"target,omitempty"`
	// Major specifies the major device number for character and block devices.
	Major uint64 `protobuf:"varint,10,opt,name=major,proto3" json:"major,omitempty"`
	// Minor specifies the minor device number for character and block devices.
	Minor uint64 `protobuf:"varint,11,opt,name=minor,proto3" json:"minor,omitempty"`
	// Xattr provides storage for extended attributes for the target resource.
	Xattr []*XAttr `protobuf:"bytes,12,rep,name=xattr,proto3" json:"xattr,omitempty"`
	// Ads stores one or more alternate data streams for the target resource.
	Ads []*ADSEntry `protobuf:"bytes,13,rep,name=ads,proto3" json:"ads,omitempty"`
	// Timestamps.
	// btime (birthtime) is available on Darwin, FreeBSD, NetBSD, and Windows.
	// When btime is unknown, it SHOULD be set to zero.
	Atime         int64 `protobuf:"varint,14,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime         int64 `protobuf:"varint,15,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime         int64 `protobuf:"varint,16,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Btime         int64 `protobuf:"varint,17,opt,name=btime,proto3" json:"btime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_manifest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_manifest_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Resource) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Resource) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

// Deprecated: Marked as deprecated in manifest.proto.
func (x *Resource) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// Deprecated: Marked as deprecated in manifest.proto.
func (x *Resource) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Resource) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Resource) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Resource) GetDigest() []string {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *Resource) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Resource) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Resource) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Resource) GetXattr() []*XAttr {
	if x != nil {
		return x.Xattr
	}
	return nil
}

func (x *Resource) GetAds() []*ADSEntry {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *Resource) GetAtime() int64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *Resource) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *Resource) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Resource) GetBtime() int64 {
	if x != nil {
		return x.Btime
	}
	return 0
}

// XAttr encodes extended attributes for a resource.
type XAttr struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name specifies the attribute name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Data specifies the associated data for the attribute.
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XAttr) Reset() {
	*x = XAttr{}
	mi := &file_manifest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XAttr) ProtoMessage() {}

func (x *XAttr) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XAttr.ProtoReflect.Descriptor instead.
func (*XAttr) Descriptor() ([]byte, []int) {
	return file_manifest_proto_rawDescGZIP(), []int{2}
}

func (x *XAttr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XAttr) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ADSEntry encodes information for a Windows Alternate Data Stream.
type ADSEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name specifices the stream name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Data specifies the stream data.
	// See also the description about the digest below.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Digest is a CAS representation of the stream data.
	//
	// At least one of data or digest MUST be specified, and either one of them
	// SHOULD be specified.
	//
	// How to access the actual data using the digest is implementation-specific,
	// and implementations can choose not to implement digest.
	// So, digest SHOULD be used only when the stream data is large.
	Digest        string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADSEntry) Reset() {
	*x = ADSEntry{}
	mi := &file_manifest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADSEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADSEntry) ProtoMessage() {}

func (x *ADSEntry) ProtoReflect() protoreflect.Message {
	mi := &file_manifest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADSEntry.ProtoReflect.Descriptor instead.
func (*ADSEntry) Descriptor() ([]byte, []int) {
	return file_manifest_proto_rawDescGZIP(), []int{3}
}

func (x *ADSEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ADSEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ADSEntry) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

var File_manifest_proto protoreflect.FileDescriptor

const file_manifest_proto_rawDesc = "" +
	"\n" +
	"\x0emanifest.proto\x12\x05proto\"7\n" +
	"\bManifest\x12+\n" +
	"\bresource\x18\x01 \x03(\v2\x0f.proto.ResourceR\bresource\"\x97\x03\n" +
	"\bResource\x12\x12\n" +
	"\x04path\x18\x01 \x03(\tR\x04path\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\x03R\x03uid\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\x03R\x03gid\x12\x16\n" +
	"\x04user\x18\x04 \x01(\tB\x02\x18\x01R\x04user\x12\x18\n" +
	"\x05group\x18\x05 \x01(\tB\x02\x18\x01R\x05group\x12\x12\n" +
	"\x04mode\x18\x06 \x01(\rR\x04mode\x12\x12\n" +
	"\x04size\x18\a \x01(\x04R\x04size\x12\x16\n" +
	"\x06digest\x18\b \x03(\tR\x06digest\x12\x16\n" +
	"\x06target\x18\t \x01(\tR\x06target\x12\x14\n" +
	"\x05major\x18\n" +
	" \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\v \x01(\x04R\x05minor\x12\"\n" +
	"\x05xattr\x18\f \x03(\v2\f.proto.XAttrR\x05xattr\x12!\n" +
	"\x03ads\x18\r \x03(\v2\x0f.proto.ADSEntryR\x03ads\x12\x14\n" +
	"\x05atime\x18\x0e \x01(\x03R\x05atime\x12\x14\n" +
	"\x05mtime\x18\x0f \x01(\x03R\x05mtime\x12\x14\n" +
	"\x05ctime\x18\x10 \x01(\x03R\x05ctime\x12\x14\n" +
	"\x05btime\x18\x11 \x01(\x03R\x05btime\"/\n" +
	"\x05XAttr\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"J\n" +
	"\bADSEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x16\n" +
	"\x06digest\x18\x03 \x01(\tR\x06digestB.Z,github.com/containerd/continuity/proto;protob\x06proto3"

var (
	file_manifest_proto_rawDescOnce sync.Once
	file_manifest_proto_rawDescData []byte
)

func file_manifest_proto_rawDescGZIP() []byte {
	file_manifest_proto_rawDescOnce.Do(func() {
		file_manifest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manifest_proto_rawDesc), len(file_manifest_proto_rawDesc)))
	})
	return file_manifest_proto_rawDescData
}

var file_manifest_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_manifest_proto_goTypes = []any{
	(*Manifest)(nil), // 0: proto.Manifest
	(*Resource)(nil), // 1: proto.Resource
	(*XAttr)(nil),    // 2: proto.XAttr
	(*ADSEntry)(nil), // 3: proto.ADSEntry
}
var file_manifest_proto_depIdxs = []int32{
	1, // 0: proto.Manifest.resource:type_name -> proto.Resource
	2, // 1: proto.Resource.xattr:type_name -> proto.XAttr
	3, // 2: proto.Resource.ads:type_name -> proto.ADSEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_manifest_proto_init() }
func file_manifest_proto_init() {
	if File_manifest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manifest_proto_rawDesc), len(file_manifest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_manifest_proto_goTypes,
		DependencyIndexes: file_manifest_proto_depIdxs,
		MessageInfos:      file_manifest_proto_msgTypes,
	}.Build()
	File_manifest_proto = out.File
	file_manifest_proto_goTypes = nil
	file_manifest_proto_depIdxs = nil
}
